/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cryptography;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Omid
 */
public class ListEncryption extends javax.swing.JFrame {

    /**
     * Creates new form ListEncryption
     */
    public ListEncryption() {
        initComponents();
        AddRowToJTable();
    }

    public static void AddRowToJTable() {
        int colNum = 5;
        DefaultTableModel model = (DefaultTableModel) decTable.getModel();
        for (int counter = Cryptography.enc_tracker_list.size() - 1; counter >= 0; counter--) {
            String tempRow[] = new String[colNum];
            tempRow[0] = String.valueOf(counter);
            tempRow[1] = Cryptography.enc_tracker_list.get(counter).getCipher();
            tempRow[2] = Cryptography.enc_tracker_list.get(counter).getKey();
            switch (Cryptography.enc_tracker_list.get(counter).getAlgo()) {
                case 0 -> {
                    tempRow[3] = Cryptography.decrypt_Caesar(Cryptography.enc_tracker_list.get(counter).getCipher(), Integer.parseInt(Cryptography.enc_tracker_list.get(counter).getKey()));
                    tempRow[4] = "Caesar Cipher";
                }
                case 1 -> {
                    Playfair pl = new Playfair(Cryptography.enc_tracker_list.get(counter).getKey(), Cryptography.enc_tracker_list.get(counter).getCipher());
                    tempRow[3] = Cryptography.enc_tracker_list.get(counter).getMsg();
                    tempRow[4] = "Playfair Cipher";
                    System.out.println(tempRow[3]);
                }
                case 2 -> {
                    tempRow[3] = Cryptography.originalText_vigenere(Cryptography.enc_tracker_list.get(counter).getCipher(), Cryptography.enc_tracker_list.get(counter).getKey());
                    tempRow[4] = "Vigenere Cipher";
                }
                case 3 -> {
                    tempRow[3] = Cryptography.Decrypt_DES(Cryptography.enc_tracker_list.get(counter).getCipher(), Cryptography.enc_tracker_list.get(counter).getKey());
                    tempRow[4] = "Block Cipher (DES)";
                }
                case 4 -> {
                    tempRow[3] = Cryptography.OTP_Decryption(Cryptography.enc_tracker_list.get(counter).getCipher().toUpperCase(), Cryptography.enc_tracker_list.get(counter).getKey().toUpperCase());
                    tempRow[4] = "One Time Pad(OTP)";
                }
            }
            model.addRow(tempRow);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        decTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("List of Encryption processes");

        decTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Cipher Text", "Key", "Decrypted Text", "Algorithm"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(decTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListEncryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListEncryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListEncryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListEncryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListEncryption().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTable decTable;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
